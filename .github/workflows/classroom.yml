name: win_excel_com_test

on:
  push:
    branches:
      - main

jobs:
  run-tests:
    runs-on: windows-latest

    steps:
      - name: Install Office
        run: choco install office365business

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: List files after checkout
        run: |
          powershell -Command "Get-ChildItem -Recurse | Select-Object -ExpandProperty FullName"

      - name: Change directory to PowerShell directory
        run: |
          cd ${{ github.workspace }}

      - name: Run Excel tests and attribute points
        id: run-tests
        run: |
          # Define points for each test
          $points = @{
              "test_PriceBond" = 3
              "test_FizzBuzz" = 2
              "test_MyMatMult" = 4
          }

          # Initialize variables to hold total points and JSON result
          $totalPoints = 0
          $maxPoints = 0
          $results = @()

          # Helper function to run test and attribute points
          function Run-Test {
              param (
                  [string]$MacroName,
                  [int]$Points
              )

              try {
                  Write-Host "Running Excel test: $MacroName"
                  $result = powershell -ExecutionPolicy Bypass -File ${{ github.workspace }}/excel-testing.ps1 -MacroName $MacroName

                  if ($result -ne "FAIL") {
                      $totalPoints += $Points
                      $status = "PASS"
                  } else {
                      $status = "FAIL"
                  }

                  # Append result to the output JSON array
                  $results += @{
                      "test" = $MacroName
                      "points" = $Points
                      "status" = $status
                  }
              } catch {
                  Write-Host "Error running test: $MacroName"
                  $results += @{
                      "test" = $MacroName
                      "points" = $Points
                      "status" = "ERROR"
                  }
              }

              $maxPoints += $Points
          }

          # Run tests with points
          Run-Test -MacroName "test_PriceBond" -Points $points["test_PriceBond"]
          Run-Test -MacroName "test_FizzBuzz" -Points $points["test_FizzBuzz"]
          Run-Test -MacroName "test_MyMatMult" -Points $points["test_MyMatMult"]

          # Create the JSON output that GitHub Classroom expects
          $jsonOutput = @{
              "totalPoints" = $totalPoints
              "maxPoints" = $maxPoints
              "tests" = $results
          } | ConvertTo-Json -Compress

          # Output the JSON result
          Write-Host "JSON Result: $jsonOutput"

          # Save the JSON result to a file
          $jsonOutput | Out-File -FilePath ${{ github.workspace }}/results.json

      - name: Upload results to GitHub Classroom
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: ${{ github.workspace }}/results.json